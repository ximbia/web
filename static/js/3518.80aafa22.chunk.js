"use strict";(self.webpackChunkweb3_boilerplate=self.webpackChunkweb3_boilerplate||[]).push([[3518],{6889:function(t,e,n){n.d(e,{W:function(){return o}});var i=n(40744),s=n(20710),r=n(52134);class o extends r.Z{constructor(t){let{chains:e=s.gL9,options:n}=t;super(),(0,i._)(this,"id",void 0),(0,i._)(this,"name",void 0),(0,i._)(this,"chains",void 0),(0,i._)(this,"options",void 0),(0,i._)(this,"ready",void 0),this.chains=e,this.options=n}getBlockExplorerUrls(t){const e=t.explorers?.map((t=>t.url))??[];return e.length>0?e:void 0}isChainUnsupported(t){return!this.chains.some((e=>e.chainId===t))}updateChains(t){this.chains=t}}},12885:function(t,e,n){n.d(e,{A:function(){return o},C:function(){return a},R:function(){return h},S:function(){return d},U:function(){return u},a:function(){return c}});var i=n(40744);class s extends Error{constructor(t,e){const{cause:n,code:s,data:r}=e;if(!Number.isInteger(s))throw new Error('"code" must be an integer.');if(!t||"string"!==typeof t)throw new Error('"message" must be a nonempty string.');super(`${t}. Cause: ${n}`),(0,i._)(this,"cause",void 0),(0,i._)(this,"code",void 0),(0,i._)(this,"data",void 0),this.cause=n,this.code=s,this.data=r}}class r extends s{constructor(t,e){const{cause:n,code:i,data:s}=e;if(!(Number.isInteger(i)&&i>=1e3&&i<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(t,{cause:n,code:i,data:s})}}class o extends Error{constructor(){super(...arguments),(0,i._)(this,"name","AddChainError"),(0,i._)(this,"message","Error adding chain")}}class a extends Error{constructor(t){let{chainId:e,connectorId:n}=t;super(`Chain "${e}" not configured for connector "${n}".`),(0,i._)(this,"name","ChainNotConfigured")}}class c extends Error{constructor(){super(...arguments),(0,i._)(this,"name","ConnectorNotFoundError"),(0,i._)(this,"message","Connector not found")}}class h extends s{constructor(t){super("Resource unavailable",{cause:t,code:-32002}),(0,i._)(this,"name","ResourceUnavailable")}}class d extends r{constructor(t){super("Error switching chain",{cause:t,code:4902}),(0,i._)(this,"name","SwitchChainError")}}class u extends r{constructor(t){super("User rejected request",{cause:t,code:4001}),(0,i._)(this,"name","UserRejectedRequestError")}}},93207:function(t,e,n){function i(t){return"string"===typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"===typeof t?Number(t):t}n.d(e,{n:function(){return i}})},3518:function(t,e,n){n.r(e),n.d(e,{CoinbaseWalletConnector:function(){return w}});var i=n(46039),s=n(95768),r=n(40744),o=n(64249),a=n(96749),c=n(87311),h=n(6889),d=n(93207),u=n(12885),l=(n(52134),new WeakMap),g=new WeakMap,p=new WeakSet;class w extends h.W{constructor(t){let{chains:e,options:n}=t;super({chains:e,options:{reloadOnDisconnect:!1,...n}}),(0,i._)(this,p),(0,r._)(this,"id",c.w.coinbase),(0,r._)(this,"name","Coinbase Wallet"),(0,r._)(this,"ready",!0),(0,s._)(this,l,{writable:!0,value:void 0}),(0,s._)(this,g,{writable:!0,value:void 0}),(0,r._)(this,"onAccountsChanged",(t=>{0===t.length?this.emit("disconnect"):this.emit("change",{account:(0,a.getAddress)(t[0])})})),(0,r._)(this,"onChainChanged",(t=>{const e=(0,d.n)(t),n=this.isChainUnsupported(e);this.emit("change",{chain:{id:e,unsupported:n}})})),(0,r._)(this,"onDisconnect",(()=>{this.emit("disconnect")}))}async connect(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{const n=await this.getProvider();this.setupListeners(),this.emit("message",{type:"connecting"});const i=await n.enable(),s=(0,a.getAddress)(i[0]);let r=await this.getChainId(),c=this.isChainUnsupported(r);if(t&&r!==t)try{r=(await this.switchChain(t)).chainId,c=this.isChainUnsupported(r)}catch(e){console.error(`Connected but failed to switch to desired chain ${t}`,e)}return{account:s,chain:{id:r,unsupported:c},provider:new o.Q(n)}}catch(n){if(/(user closed modal|accounts received is empty)/i.test(n.message))throw new u.U(n);throw n}}async disconnect(){if(!(0,s.b)(this,g))return;const t=await this.getProvider();t.removeListener("accountsChanged",this.onAccountsChanged),t.removeListener("chainChanged",this.onChainChanged),t.removeListener("disconnect",this.onDisconnect),t.disconnect(),t.close()}async getAccount(){const t=await this.getProvider(),e=await t.request({method:"eth_accounts"});if(0===e.length)throw new Error("No accounts found");return(0,a.getAddress)(e[0])}async getChainId(){const t=await this.getProvider();return(0,d.n)(t.chainId)}async getProvider(){if(!(0,s.b)(this,g)){let t=(await Promise.all([n.e(551),n.e(6479),n.e(6942)]).then(n.bind(n,6479))).default;"function"!==typeof t&&"function"===typeof t.default&&(t=t.default),(0,s.a)(this,l,new t(this.options));const e=(0,s.b)(this,l).walletExtension?.getChainId(),i=this.chains.find((t=>this.options.chainId?t.chainId===this.options.chainId:t.chainId===e))||this.chains[0],r=this.options.chainId||i?.chainId,o=this.options.jsonRpcUrl||i?.rpc[0];(0,s.a)(this,g,(0,s.b)(this,l).makeWeb3Provider(o,r))}return(0,s.b)(this,g)}async getSigner(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const[e,n]=await Promise.all([this.getProvider(),this.getAccount()]);return new o.Q(e,t).getSigner(n)}async isAuthorized(){try{return!!await this.getAccount()}catch{return!1}}async switchChain(t){const e=await this.getProvider(),n=(0,a.hexValue)(t);try{return await e.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]}),this.chains.find((e=>e.chainId===t))??{chainId:t,name:`Chain ${n}`,slug:`${n}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],testnet:!1,chain:"ethereum",shortName:"eth"}}catch(s){const o=this.chains.find((e=>e.chainId===t));if(!o)throw new u.C({chainId:t,connectorId:this.id});if(4902===s.code)try{return await e.request({method:"wallet_addEthereumChain",params:[{chainId:n,chainName:o.name,nativeCurrency:o.nativeCurrency,rpcUrls:o.rpc,blockExplorerUrls:this.getBlockExplorerUrls(o)}]}),o}catch(r){if((0,i.a)(this,p,m).call(this,r))throw new u.U(r);throw new u.A}if((0,i.a)(this,p,m).call(this,s))throw new u.U(s);throw new u.S(s)}}async setupListeners(){const t=await this.getProvider();t.on("accountsChanged",this.onAccountsChanged),t.on("chainChanged",this.onChainChanged),t.on("disconnect",this.onDisconnect)}async getQrUrl(){if(await this.getProvider(),!(0,s.b)(this,l))throw new Error("Coinbase Wallet SDK not initialized");return(0,s.b)(this,l).getQrUrl()}}function m(t){return/(user rejected)/i.test(t.message)}}}]);